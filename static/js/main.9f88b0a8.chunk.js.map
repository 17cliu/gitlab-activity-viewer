{"version":3,"sources":["components/FormTextField.js","components/Form.js","api.js","hooks/useData.js","utils.js","components/BarChart.js","components/EventsByDayOfWeekChart.js","components/EventsByTypeChart.js","components/DownloadLink.js","components/Loader.js","components/TapestryCell.js","components/TapestryLabel.js","components/Tapestry.js","components/Statistics.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["FormTextField","id","label","name","placeholder","error","register","className","htmlFor","type","aria-invalid","ref","role","Form","accessTokenError","usernameError","onSubmit","useForm","watch","errors","handleSubmit","showCustomHostOptions","accessToken","username","data","options","host","isCustomHost","customHost","value","defaultChecked","required","pattern","minLength","a","url","URL","fetchOptions","headers","fetch","response","json","users","length","Error","fetchUserEvents","userId","query","URLSearchParams","per_page","queryOptions","toString","process","body","nextPage","get","total","Number","totalPages","FETCH_STATES","useData","useState","user","setUser","events","setEvents","numEventsLoaded","setNumEventsLoaded","status","setStatus","useEffect","fetchUser","then","catch","err","console","warn","initialResponse","pagesToFetch","Array","keys","slice","log","promises","map","page","thisResponse","n","Promise","allSettled","outcomes","newResult","reduce","memo","outcome","i","concat","formatIsoDate","date","y","getFullYear","m","getMonth","padStart","d","getDate","formatLongDate","Intl","DateTimeFormat","dateStyle","format","BarChart","textStyles","color","fontFamily","fontWeight","plotOptions","animation","enableMouseTracking","borderWidth","cursor","pointPadding","dataLabels","enabled","crop","overflow","style","fontSize","defaultOptions","title","chart","backgroundColor","plotBackgroundColor","bar","column","yAxis","gridLineWidth","gridLineColor","labels","xAxis","lineWidth","lineColor","autoRotation","allowOverlap","credits","legend","highcharts","Highcharts","merge","LABELS","sun","mon","tue","wed","thu","fri","sat","EventsByDayOfWeekChart","counts","days","fill","forEach","o","Date","created_at","getDay","countEventsByDaysOfTheWeek","text","width","height","series","Object","k","comment","commit","openedIssue","closedIssue","openedMilestone","closedMilestone","destroyedMilestone","openedMr","approvedMr","acceptedMr","closedMr","createdTag","deletedTag","createdBranch","deletedBranch","EventsByTypeChart","state","action_name","target_type","push_data","ref_type","countEventsByType","DownloadLink","blobConfig","Blob","JSON","stringify","blobUrl","createObjectURL","revokeObjectURL","href","download","Loader","current","pct","max","TapestryCell","count","showCount","thresholds","level","data-label","data-count","MONTHS","TapestryLabel","year","month","numWeeksInMonth","monthName","data-month","data-year","THRESHOLDS","Tapestry","cells","monthLabels","startDate","numWeeks","weeks","currentLabel","setDate","push","calculateMonthLabels","Math","ceil","cell","Statistics","durationInMilliseconds","endDate","getTime","numDays","numDaysInPartialWeek","numWeekdays","floor","averageEventsPerDay","round","averageEventsPerWeekday","data-testid","Dashboard","oldestDate","newDate","floorDateToClosestSunday","newestDate","countsByDay","oldest","newest","dates","generateDateStampsInRange","s","tapestryCells","reverse","App","contents","config","setConfig","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f88b0a8.chunk.js","sourcesContent":["function FormTextField({\n    id,\n    label,\n    name,\n    placeholder = '',\n    error,\n    register\n}) {\n    return (\n        <div className=\"form-row\">\n            <label htmlFor={id}>\n                {label}\n            </label>\n            <input type=\"text\"\n                className={`text-input ${error && 'is-invalid'}`}\n                id={id}\n                name={name || id}\n                placeholder={placeholder}\n                aria-invalid={error ? 'true' : 'false'}\n                ref={register}\n            />\n            {error && <div role=\"alert\" className=\"invalid-message\">{error}</div>}\n        </div>\n    );\n}\n\nexport default FormTextField;\n","import { useForm } from 'react-hook-form';\nimport FormTextField from './FormTextField';\n\nconst DEFAULT_HOST = 'gitlab.com';\n\nfunction Form({ onSubmit }) {\n    const { register, watch, errors, handleSubmit } = useForm();\n\n    const handleFormSubmit = data => {\n        const options = {\n            host: data.isCustomHost === 'true' ? data.customHost : DEFAULT_HOST,\n            accessToken: data.isCustomHost ? data.accessToken : '',\n            username: data.username\n        };\n\n        onSubmit(options);\n    };\n\n    // Watch value of this form field, and see if the value is \"true\".\n    const showCustomHostOptions = watch('isCustomHost') === 'true';\n\n    // TODO: Validation error management here is getting a lil unwieldy\n\n    // Provide nuanced access token validation errors\n    let accessTokenError;\n\n    if (errors.accessToken?.type === 'required') {\n        accessTokenError = 'Please enter access token';\n    } else if (errors.accessToken?.type === 'pattern') {\n        accessTokenError = 'Access token must contain only letters and numbers';\n    }\n\n    // Provide nuanced username validation errors\n    let usernameError;\n\n    if (errors.username?.type === 'required') {\n        usernameError = 'Please enter username';\n    } else if (errors.username?.type === 'minLength') {\n        usernameError = 'Username must be at least two letters long';\n    } else if (errors.username?.type === 'pattern') {\n        usernameError = 'Username must contain only letters, numbers, ' +\n            'dash (-), underscore (_), and periods (.)';\n    }\n\n    return (\n        <form onSubmit={handleSubmit(handleFormSubmit)} className=\"form\">\n            <div className=\"form-row\">\n                <fieldset className=\"fieldset\">\n                    <legend htmlFor=\"host\">\n                        My profile is on...\n                    </legend>\n                    <label className=\"radio-label\">\n                        <input type=\"radio\"\n                            className=\"radio-input\"\n                            name=\"isCustomHost\"\n                            value=\"false\"\n                            ref={register}\n                            defaultChecked\n                        />\n                        GitLab.com\n                    </label>\n\n                    <label className=\"radio-label\">\n                        <input type=\"radio\"\n                            className=\"radio-input\"\n                            name=\"isCustomHost\"\n                            value=\"true\"\n                            ref={register}\n                        />\n                        A self-hosted instance of GitLab...\n                    </label>\n                </fieldset>\n\n                {showCustomHostOptions && (\n                    <div className=\"nested-fields\">\n                        <FormTextField\n                            id=\"customHost\"\n                            label=\"URL of your GitLab instance (e.g. gitlab.mycompany.com)\"\n                            placeholder=\"git.mycompany.com\"\n                            error={errors.customHost && 'Please enter domain'}\n                            register={register({ required: true })}\n                        />\n                        <FormTextField\n                            id=\"accessToken\"\n                            label=\"Your access token\n                                (generate one with `read_api` scope at\n                                User Settings &gt; Access Tokens)\"\n                            placeholder=\"YOUR_API_KEY\"\n                            error={accessTokenError}\n                            register={register({\n                                required: true,\n                                pattern: /^[a-z0-9]+$/i,\n                            })}\n                        />\n                    </div>\n                )}\n            </div>\n\n            <FormTextField\n                id=\"username\"\n                label=\"Your username\"\n                error={usernameError}\n                register={register({\n                    required: true,\n                    // Approximation of GitLab username rules:\n                    // - Only allow letters, numbers, dash, underscore, period\n                    // - Must be at least two characters long\n                    // https://gitlab.com/gitlab-org/gitlab/-/blob/\n                    // 91895122e1085ef027146334cedb875d1e4f2693/lib/gitlab/path_regex.rb#L135\n                    pattern: /^[a-z0-9-_.]{2,}$/i,\n                    // The regex above covers this, but including this rule makes\n                    // it easier to add a separate validation message for length.\n                    minLength: 2,\n                })}\n            />\n\n            <input className=\"btn\" type=\"submit\" value=\"Go!\" />\n        </form>\n    );\n}\n\nexport default Form;\n","export async function fetchUser(options) {\n    const { host, username, accessToken } = options;\n    const url = new URL(`https://${host}/api/v4/users?username=${username}`);\n    const fetchOptions = {};\n\n    if (accessToken) {\n        // This endpoint is publicly available for gitlab.com, so we only\n        // need to pass an access token if we're accessing a private self-hosted\n        // instance of GitLab.\n        fetchOptions.headers = {\n            'PRIVATE-TOKEN': accessToken\n        };\n    }\n\n    const response = await fetch(url, fetchOptions);\n    const users = await response.json();\n\n    if (users.length) {\n        return users[0];\n    } else {\n        throw new Error('User not found');\n    }\n}\n\nexport async function fetchUserEvents(options) {\n    const { host, userId, accessToken } = options;\n    const query = new URLSearchParams({\n        per_page: 100,\n        ...options.queryOptions\n    });\n    const url = new URL(`https://${host}/api/v4/users/${userId}/events?${query.toString()}`);\n\n    const response = await fetch(url, {\n        headers: {\n            'PRIVATE-TOKEN': accessToken || process.env.REACT_APP_GITLAB_COM_TOKEN,\n        }\n    });\n\n    const body = await response.json();\n    const headers = response.headers;\n    const nextPage = headers.get('x-next-page');\n    const total = Number(headers.get('x-total'));\n    const totalPages = Number(headers.get('x-total-pages'));\n\n    return {\n        total,\n        totalPages,\n        nextPage,\n        data: body,\n    };\n}\n","import { useState, useEffect } from 'react';\nimport { fetchUser, fetchUserEvents } from '../api';\n\nexport const FETCH_STATES = {\n    LOADING: 'LOADING',\n    SUCCESS: 'SUCCESS',\n    ERROR: 'ERROR',\n};\n\nexport default function useData({ host, username, accessToken }) {\n    const [user, setUser] = useState(null);\n    const [events, setEvents] = useState({ data: [], total: 0 });\n    const [numEventsLoaded, setNumEventsLoaded] = useState(0);\n    const [status, setStatus] = useState(FETCH_STATES.LOADING);\n    // const [error, setError] = useState(null);\n\n    // First, fetch the user\n    useEffect(() => {\n        setStatus(FETCH_STATES.LOADING);\n\n        fetchUser({ host, username, accessToken })\n            .then(setUser)\n            .catch(err => {\n                console.warn('Could not fetch user', err);\n                setUser(null);\n                setStatus(FETCH_STATES.ERROR);\n            });\n    }, [host, username, accessToken]);\n\n    // Next, fetch the user's data\n    useEffect(() => {\n        if (!user) return;\n\n        setStatus(FETCH_STATES.LOADING);\n\n        fetchUserEvents({ host, userId: user.id, accessToken }).then(initialResponse => {\n            // TODO: Reduce for testing\n            // const totalPages = Math.min(initialResponse.totalPages, 10);\n            const totalPages = initialResponse.totalPages;\n\n            setEvents(initialResponse);\n            setNumEventsLoaded(initialResponse.data.length);\n\n            if (!initialResponse.nextPage) {\n                // This is all the data there is!\n                setStatus(FETCH_STATES.SUCCESS);\n            } else {\n                // Fetch the remaining pages.\n\n                // Array(n) generates [0, 1, 2, ... n-1]. Because page numbers are\n                // 1-indexed, we generate `totalPages + 1` numbers, then slice off\n                // the 0. We also slice off the 1, because we already fetched the\n                // first page.\n                const pagesToFetch = [...Array(totalPages + 1).keys()].slice(2);\n                console.log('Attempting to fetch more pages:', pagesToFetch);\n\n                const promises = pagesToFetch.map(async page => {\n                    const thisResponse = await fetchUserEvents({\n                        host,\n                        userId: user.id,\n                        accessToken,\n                        queryOptions: { page }\n                    });\n                    setNumEventsLoaded(n => n + thisResponse.data.length);\n                    return thisResponse;\n                });\n\n                Promise.allSettled(promises).then(outcomes => {\n                    const newResult = outcomes.reduce((memo, outcome, i) => {\n                        if (outcome.status === 'fulfilled') {\n                            return {\n                                ...memo,\n                                nextPage: outcome.value.nextPage,\n                                data: memo.data.concat(outcome.value.data)\n                            };\n                        } else {\n                            // TODO: Tell user that some data is missing!\n                            console.log('Failed to fetch chunk of events!', i);\n                            return memo;\n                        }\n                    }, { ...initialResponse });\n\n                    setEvents(newResult);\n                    setStatus(FETCH_STATES.SUCCESS);\n                });\n            }\n        }).catch(err => {\n            console.warn('Caught error in useData!', err);\n            setStatus(FETCH_STATES.ERROR);\n        });\n    }, [host, user, accessToken]);\n\n    return {\n        user,\n        events,\n        numEventsLoaded,\n        status\n    };\n}\n","\n/**\n * Returns array of objects that are month labels for a calendar.\n *\n * @param {Date} startDate - Start date for this calendar; must be a Sunday\n * @param {number} numWeeks - Number of weeks displayed in this calendar\n * @returns {object[]} - Monthly labels, with the following properties:\n *  - {number} year - The year, e.g. `2021`\n *  - {number} month - The zero-indexed month, e.g. `0` for January\n *  - {number} numWeeksInMonth - The number of weeks occurring in this month\n */\nexport function calculateMonthLabels(startDate, numWeeks) {\n    const weeks = [...Array(numWeeks).keys()];\n\n    const monthLabels = [];\n    let currentLabel = null;\n\n    weeks.forEach(n => {\n        const date = new Date(startDate);\n        date.setDate(date.getDate() + n * 7);\n        const month = date.getMonth();\n\n        if (currentLabel && currentLabel.month === month) {\n            currentLabel.numWeeksInMonth++;\n        } else {\n            currentLabel = {\n                year: date.getFullYear(),\n                month,\n                numWeeksInMonth: 1\n            };\n            monthLabels.push(currentLabel);\n        }\n    });\n\n    return monthLabels;\n}\n\nexport function floorDateToClosestSunday(date) {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() - newDate.getDay());\n    return newDate;\n}\n\nexport function formatIsoDate(date) {\n    const y = date.getFullYear();\n    const m = `${date.getMonth() + 1}`.padStart(2, '0');\n    const d = `${date.getDate()}`.padStart(2, '0');\n    return `${y}-${m}-${d}`;\n}\n\nexport function formatLongDate(date) {\n    return new Intl.DateTimeFormat('en-CA', { dateStyle: 'full' }).format(date);\n}\n\nexport function generateDateStampsInRange(oldest, newest) {\n    const newestDate = new Date(newest);\n    const oldestDate = new Date(oldest);\n    const dates = [];\n\n    // https://github.com/eslint/eslint/issues/6984\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (newestDate > oldestDate) {\n        dates.push(formatIsoDate(newestDate));\n        newestDate.setDate(newestDate.getDate() - 1);\n    }\n\n    return dates;\n}\n","\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport merge from 'lodash.merge';\n\nfunction BarChart({ options }) {\n    const textStyles = {\n        color: '#fff',\n        fontFamily: 'Raleway, sans-serif',\n        fontWeight: 'normal'\n    };\n    const plotOptions = {\n        animation: false,\n        enableMouseTracking: false,\n        borderWidth: 0,\n        color: '#ff4800',\n        cursor: 'pointer',\n        // pointWidth: 20,\n        pointPadding: 0,\n        dataLabels: {\n            enabled: true,\n            crop: false,\n            overflow: 'none',\n            style: {\n                ...textStyles,\n                fontSize: '9pt',\n                fontWeight: 700\n            }\n        }\n    };\n    const defaultOptions = {\n        title: {\n            style: {\n                ...textStyles,\n                fontWeight: '700',\n            }\n        },\n        chart: {\n            type: 'bar',\n            backgroundColor: null,\n            plotBackgroundColor: null,\n            style: textStyles\n        },\n        plotOptions: {\n            // Define both to provide default styling for either type.\n            // Having an extraneous set of plot type options does not cause\n            // problems with Highcharts.\n            bar: plotOptions,\n            column: plotOptions\n        },\n        yAxis: {\n            title: 'Number of events',\n            gridLineWidth: 1,\n            gridLineColor: '#3d3d3d',\n            labels: {\n                style: textStyles\n            }\n        },\n        xAxis: {\n            type: 'category',\n            lineWidth: 1,\n            lineColor: '#3d3d3d',\n            labels: {\n                style: textStyles,\n                // rotation: 270,\n                autoRotation: false,\n                allowOverlap: false,\n                overflow: 'allow'\n            }\n        },\n        credits: { enabled: false },\n        legend: { enabled: false },\n    };\n\n    return (\n        <div className=\"chart-block\">\n            <HighchartsReact\n                highcharts={Highcharts}\n                options={merge(defaultOptions, options)}\n            />\n        </div>\n    );\n}\n\nexport default BarChart;\n","import BarChart from './BarChart';\n\nconst LABELS = {\n    sun: 'Sun',\n    mon: 'Mon',\n    tue: 'Tue',\n    wed: 'Wed',\n    thu: 'Thu',\n    fri: 'Fri',\n    sat: 'Sat',\n};\n\nexport function countEventsByDaysOfTheWeek(data) {\n    const days = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n    const counts = Array(7).fill(0); // One cell per day of the week, starting Sun\n\n    data.forEach(o => {\n        const d = new Date(o.created_at);\n        const i = d.getDay();\n        counts[i]++;\n    });\n\n    return counts.reduce((memo, n, i) => ({ ...memo, [days[i]]: n }), {});\n}\n\nfunction EventsByDayOfWeekChart({ data }) {\n    const counts = countEventsByDaysOfTheWeek(data);\n    const options = {\n        title: { text: 'Events by Day of the Week' },\n        chart: {\n            width: 500,\n            height: 200,\n            type: 'column',\n        },\n        yAxis: {\n            labels: {\n                enabled: false\n            }\n        },\n        series: [\n            {\n                name: 'Counts',\n                data: Object.keys(counts).map(k => [LABELS[k], counts[k]])\n            }\n        ]\n    };\n\n    return (\n        <BarChart options={options} />\n    );\n}\n\nexport default EventsByDayOfWeekChart;\n","import BarChart from './BarChart';\n\nconst LABELS = {\n    comment: 'Commented',\n    commit: 'Pushed commits',\n    openedIssue: 'Opened issue',\n    closedIssue: 'Closed issue',\n    openedMilestone: 'Opened milestone',\n    closedMilestone: 'Closed milestone',\n    destroyedMilestone: 'Destroyed milestone',\n    openedMr: 'Opened MR',\n    approvedMr: 'Approved MR',\n    acceptedMr: 'Accepted MR',\n    closedMr: 'Closed MR',\n    createdTag: 'Created tag',\n    deletedTag: 'Deleted tag',\n    createdBranch: 'Created branch',\n    deletedBranch: 'Deleted branch'\n};\n\nexport function countEventsByType(data) {\n    const state = {\n        comment: 0,\n        commit: 0,\n        openedIssue: 0,\n        closedIssue: 0,\n        openedMilestone: 0,\n        closedMilestone: 0,\n        destroyedMilestone: 0,\n        openedMr: 0,\n        approvedMr: 0,\n        acceptedMr: 0,\n        closedMr: 0,\n        createdTag: 0,\n        deletedTag: 0,\n        createdBranch: 0,\n        deletedBranch: 0\n    };\n\n    data.forEach(o => {\n        if (o.action_name === 'commented on') {\n            state.comment++;\n        } else if (o.action_name === 'opened' && o.target_type === 'Issue') {\n            state.openedIssue++;\n        } else if (o.action_name === 'closed' && o.target_type === 'Issue') {\n            state.closedIssue++;\n        } else if (o.action_name === 'opened' && o.target_type === 'Milestone') {\n            state.openedMilestone++;\n        } else if (o.action_name === 'closed' && o.target_type === 'Milestone') {\n            state.closedMilestone++;\n        } else if (o.action_name === 'destroyed' && o.target_type === 'Milestone') {\n            state.destroyedMilestone++;\n        } else if (o.action_name === 'opened' && o.target_type === 'MergeRequest') {\n            state.openedMr++;\n        } else if (o.action_name === 'approved' && o.target_type === 'MergeRequest') {\n            state.approvedMr++;\n        } else if (o.action_name === 'accepted' && o.target_type === 'MergeRequest') {\n            state.acceptedMr++;\n        } else if (o.action_name === 'closed' && o.target_type === 'MergeRequest') {\n            state.closedMr++;\n        } else if (o.action_name === 'pushed new' && o.push_data.ref_type === 'tag') {\n            state.createdTag++;\n        } else if (o.action_name === 'deleted' && o.push_data.ref_type === 'tag') {\n            state.deletedTag++;\n        } else if (o.action_name === 'pushed new' && o.push_data.ref_type === 'branch') {\n            state.createdBranch++;\n        } else if (o.action_name === 'deleted' && o.push_data.ref_type === 'branch') {\n            state.deletedBranch++;\n        } else if (o.action_name === 'pushed to') {\n            state.commit++;\n        } else if (o.action_name === 'created' || o.action_name === 'joined' ||\n            o.action_name === 'left'\n        ) {\n            // Not counting project/group create/join/leave events\n        } else {\n            console.warn('unrecognized event', o);\n        }\n    });\n\n    return state;\n}\n\nfunction EventsByTypeChart({ data }) {\n    const counts = countEventsByType(data);\n    const options = {\n        title: { text: 'Events by Type' },\n        chart: {\n            width: 500,\n            height: 500\n        },\n        series: [\n            {\n                name: 'Counts',\n                data: Object.keys(counts).map(k => [LABELS[k], counts[k]])\n            }\n        ]\n    };\n\n    return (\n        <BarChart options={options} />\n    );\n}\n\nexport default EventsByTypeChart;\n","import { useEffect } from 'react';\n\nfunction DownloadLink({ data }) {\n    // Using blobs is MUCH faster than encoding the data directly to a URL:\n    // `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(data))}`\n\n    const blobConfig = new Blob(\n        [JSON.stringify(data)],\n        { type: 'text/json;charset=utf-8' }\n    );\n    const blobUrl = URL.createObjectURL(blobConfig);\n\n    useEffect(() => () => {\n        // Revoke URL on component unmount\n        URL.revokeObjectURL(blobUrl);\n    }, [blobUrl]);\n\n    return (\n        <p>\n            <a href={blobUrl} download=\"data.json\">Download data as JSON</a>\n        </p>\n    );\n}\n\nexport default DownloadLink;\n","\nfunction Loader({ current, total }) {\n    const pct = current / total * 100;\n    return (\n        <div className=\"loader\">\n            <label htmlFor=\"loader\">Loaded {current} of {total} events</label>\n            <progress id=\"loader\" className=\"progress\" max={total} value={current}>\n                {pct}%\n            </progress>\n        </div>\n    );\n}\n\nexport default Loader;\n","function TapestryCell({\n    count,\n    label,\n    showCount = true,\n    thresholds,\n}) {\n    const numThresholds = thresholds.length;\n    let level = 0;\n\n    for (let i = numThresholds - 1; i >= 0; i--) {\n        if (count >= thresholds[i].value) {\n            level = i;\n            break;\n        }\n    }\n\n    const className = `tapestry-cell tapestry-cell--${level}`;\n\n    return (\n        <div className={className}\n            data-label={label}\n            data-count={count}\n            title={label}\n        >\n            {showCount && count ? count : ''}\n        </div>\n    );\n}\n\nexport default TapestryCell;\n","const MONTHS = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n];\n\nfunction TapestryLabel({ year, month, numWeeksInMonth }) {\n    const className = `tapestry-label tapestry-label--${numWeeksInMonth}`;\n    const monthName = MONTHS[month];\n    const label = `${monthName} ${year}`;\n\n    return (\n        <div title={label} data-month={month} data-year={year} className={className}>\n            {!month && <span className=\"tapestry-label-year\">{year}</span>}\n            <span className=\"tapestry-label-month\">{monthName}</span>\n        </div>\n    );\n}\n\nexport default TapestryLabel;\n","\nimport { calculateMonthLabels } from '../utils';\nimport TapestryCell from './TapestryCell';\nimport TapestryLabel from './TapestryLabel';\n\nconst THRESHOLDS = [\n    { value: 0, label: 'Bland: 0' },\n    { value: 1, label: 'Mild: 1 to 9 contributions' },\n    { value: 10, label: 'Medium: 10 to 19 contributions' },\n    { value: 20, label: 'Hot: 20 to 29 contributions' },\n    { value: 30, label: 'Extra hot: 30 to 39 contributions' },\n    { value: 40, label: 'Are you sure this is edible?: 40 to 49 contributions' },\n    { value: 50, label: 'Actual fire: 50+ contributions' }\n];\n\nfunction Tapestry({ cells, startDate }) {\n    const numWeeks = Math.ceil(cells.length / 7);\n    const monthLabels = calculateMonthLabels(startDate, numWeeks);\n\n    return (\n        <>\n            <div className=\"tapestry-window\">\n                <div className=\"tapestry-labels\">\n                    {monthLabels.map((label, i) => (\n                        <TapestryLabel\n                            key={`${label.year}${label.month}`}\n                            {...label}\n                        />\n                    ))}\n                </div>\n                <div className=\"tapestry\">\n                    {cells.map(cell => (\n                        <TapestryCell\n                            key={cell.label}\n                            thresholds={THRESHOLDS}\n                            {...cell}\n                        />\n                    ))}\n                </div>\n            </div>\n            <div className=\"tapestry-legend\">\n                {THRESHOLDS.map(o => (\n                    <TapestryCell\n                        key={`legend-${o.value}`}\n                        count={o.value}\n                        label={o.label}\n                        showCount={false}\n                        thresholds={THRESHOLDS}\n                    />\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default Tapestry;\n","function Statistics({ data, startDate, endDate }) {\n    const durationInMilliseconds = endDate.getTime() - startDate.getTime();\n\n    // If date range is less than one day, round up to one day.\n    const numDays = Math.ceil(durationInMilliseconds / 1000 / 60 / 60 / 24);\n\n    // Calculations here rely on guarantee that startDate is always a Sunday.\n    const numFullWeeks = Math.floor(numDays / 7);\n    const numDaysInPartialWeek = numDays % 7;\n    let numWeekdays = numFullWeeks * 5;\n\n    if (numDaysInPartialWeek > 1) {\n        // Our partial week extends into the weekdays, so add those number\n        // of days, minus 1 for Sunday, to our weekday count.\n        numWeekdays += numDaysInPartialWeek - 1;\n    }\n\n    // TODO: Break these up into separate components\n    const averageEventsPerDay = numDays\n        ? Math.round(data.length / numDays * 100) / 100\n        : 0;\n    const averageEventsPerWeekday = numWeekdays\n        ? Math.round(data.length / numWeekdays * 100) / 100\n        : 0;\n\n    return (\n        <div className=\"row\">\n            <p className=\"stats-block\" data-testid=\"avgPerDay\">\n                Average of <span className=\"highlight\">{averageEventsPerDay}</span> events per day\n            </p>\n            {numWeekdays &&\n                <p className=\"stats-block\" data-testid=\"avgPerWeekday\">\n                    Average of <span className=\"highlight\">{averageEventsPerWeekday}</span> events\n                    per day, excluding weekends\n                </p>\n            }\n        </div>\n    );\n}\n\nexport default Statistics;\n","// import Action from './Action';\nimport useData, { FETCH_STATES } from '../hooks/useData';\nimport {\n    floorDateToClosestSunday,\n    formatLongDate,\n    formatIsoDate,\n    generateDateStampsInRange\n} from '../utils';\nimport EventsByDayOfWeek from './EventsByDayOfWeekChart';\nimport EventsByTypeChart from './EventsByTypeChart';\nimport DownloadLink from './DownloadLink';\nimport Loader from './Loader';\nimport Tapestry from './Tapestry';\nimport Statistics from './Statistics';\n\nfunction Dashboard({ host, username, accessToken }) {\n    const { user, events, numEventsLoaded, status } = useData({ host, username, accessToken });\n    const { data, total } = events;\n\n    if (status === FETCH_STATES.LOADING) {\n        // Still loading...\n        return <Loader current={numEventsLoaded} total={total} />;\n    } else if (status === FETCH_STATES.ERROR) {\n        // Encountered error :(\n        return (\n            <div className=\"dashboard\">\n                <p>Something went wrong :(</p>\n            </div>\n        );\n    } else if (!data.length) {\n        // Request completed successfully, but no data :(\n        return (\n            <div className=\"dashboard\">\n                <p>No activity found for @{user.username} :(</p>\n            </div>\n        );\n    }\n\n    const oldestDate = floorDateToClosestSunday(data[data.length - 1].created_at);\n    const newestDate = new Date(data[0].created_at);\n    const dates = generateDateStampsInRange(oldestDate, newestDate);\n\n    // Count events per day\n    const countsByDay = dates.reduce((memo, s) => ({ ...memo, [s]: 0 }), {});\n    data.forEach(o => {\n        const d = formatIsoDate(new Date(o.created_at));\n        countsByDay[d]++;\n    });\n\n    const tapestryCells = Object.keys(countsByDay).reverse().map(s => ({\n        label: s,\n        count: countsByDay[s]\n    }));\n\n    return (\n        <div className=\"dashboard\">\n            <h2>@{user.username}</h2>\n\n            <p>\n                Showing <b>{data.length} events</b> from {\n                    formatLongDate(oldestDate)} to {formatLongDate(newestDate)}.\n            </p>\n\n            <Tapestry cells={tapestryCells} startDate={oldestDate} />\n            <Statistics data={data} startDate={oldestDate} endDate={newestDate} />\n\n            <div className=\"row\">\n                <EventsByTypeChart data={data} />\n                <EventsByDayOfWeek data={data} />\n            </div>\n\n            {/* <ol className=\"activity-list\">\n                {result.map(o => <Action key={o.id} {...o} />)}\n            </ol> */}\n            <DownloadLink data={events} />\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import { useState } from 'react';\nimport Form from './components/Form';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n    const [config, setConfig] = useState(null);\n\n    let contents;\n\n    if (config && config.username) {\n        contents = <>\n            <Dashboard {...config} />\n            <button\n                className=\"btn\"\n                onClick={() => setConfig({ ...config, username: null })}>\n                    &lt; Try another user\n            </button>\n        </>;\n    } else {\n        contents = <Form onSubmit={setConfig} />;\n    }\n\n    return (\n        <div>\n            <h1>How spicy is your GitLab activity? 🔥</h1>\n            {contents}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}